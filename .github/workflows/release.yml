name: Release

on:
  push:
    branch:
      - "release/*"

jobs:
  build-docker-image-noble:
    name: build-image
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
      id-token: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Define YANET version
        run: |
          YANET_VERSION=${{github.ref_name}}

          # Valudate YANET version from tag value
          if [[ "${YANET_VERSION}" =~ ^[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            YANET_SUBVERSIONS=(${YANET_VERSION//./ })
            echo YANET_VERSION_MAJOR=${YANET_SUBVERSIONS[0]} >>$GITHUB_ENV
            echo YANET_VERSION_MINOR=${YANET_SUBVERSIONS[1]} >>$GITHUB_ENV
            echo YANET_VERSION_REVISION=${YANET_SUBVERSIONS[2]} >>$GITHUB_ENV
          fi
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: yanetplatform/yanet
      - name: Log in to Docker Hub
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@3b5e8027fcad23fda98b2e3ac259d8d67585f671
        with:
          context: .
          file: ./build/Dockerfile.image
          build-args: |
            YANET_VERSION=${{github.ref_name}}
            YANET_VERSION_MAJOR=${{ env.YANET_VERSION_MAJOR }}
            YANET_VERSION_MINOR=${{ env.YANET_VERSION_MINOR }}
            YANET_VERSION_REVISION=${{ env.YANET_VERSION_REVISION }}
            YANET_VERSION_HASH=${{github.sha}}
            YANET_VERSION_CUSTOM=stable
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
